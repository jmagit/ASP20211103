// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

#nullable disable

namespace Curso.Domains.Entities {
    /// <summary>
    /// Products sold or used in the manfacturing of sold products.
    /// </summary>
    [Table("Product", Schema = "SalesLT")]
    [Index(nameof(Name), Name = "AK_Product_Name", IsUnique = true)]
    [Index(nameof(ProductNumber), Name = "AK_Product_ProductNumber", IsUnique = true)]
    [Index(nameof(Rowguid), Name = "AK_Product_rowguid", IsUnique = true)]
    public partial class Product {
        public Product() {
            SalesOrderDetails = new HashSet<SalesOrderDetail>();
        }

        /// <summary>
        /// Primary key for Product records.
        /// </summary>
        [Key]
        [Column("ProductID")]
        [Display(Name = "Código")]
        public int ProductId { get; set; }
        /// <summary>
        /// Name of the product.
        /// </summary>
        [Required]
        [StringLength(50)]
        [Display(Name = "Nombre")]
        public string Name { get; set; }
        /// <summary>
        /// Unique product identification number.
        /// </summary>
        [Required]
        [StringLength(25)]
        [Display(Name = "Número")]
        public string ProductNumber { get; set; }
        /// <summary>
        /// Product color.
        /// </summary>
        [StringLength(15)]
        public string Color { get; set; }
        /// <summary>
        /// Standard cost of the product.
        /// </summary>
        [Column(TypeName = "money")]
        [Display(Name = "Coste estándar")]
        [DataType(DataType.Currency)]
        public decimal StandardCost { get; set; }
        /// <summary>
        /// Selling price.
        /// </summary>
        [Column(TypeName = "money")]
        [Display(Name = "Precio de venta")]
        [DataType(DataType.Currency)]
        public decimal ListPrice { get; set; }
        /// <summary>
        /// Product size.
        /// </summary>
        [StringLength(5)]
        [Display(Name = "Tamaño")]
        public string Size { get; set; }
        /// <summary>
        /// Product weight.
        /// </summary>
        [Column(TypeName = "decimal(8, 2)")]
        [Display(Name = "Peso")]
        public decimal? Weight { get; set; }
        /// <summary>
        /// Product is a member of this product category. Foreign key to ProductCategory.ProductCategoryID. 
        /// </summary>
        [Column("ProductCategoryID")]
        [Display(Name = "Categoría")]
        public int? ProductCategoryId { get; set; }
        /// <summary>
        /// Product is a member of this product model. Foreign key to ProductModel.ProductModelID.
        /// </summary>
        [Column("ProductModelID")]
        [Display(Name = "Modelo")]
        public int? ProductModelId { get; set; }
        /// <summary>
        /// Date the product was available for sale.
        /// </summary>
        [Column(TypeName = "datetime")]
        [Display(Name = "Disponible desde")]
        public DateTime SellStartDate { get; set; }
        /// <summary>
        /// Date the product was no longer available for sale.
        /// </summary>
        [Column(TypeName = "datetime")]
        [Display(Name = "Disponible hasta")]
        public DateTime? SellEndDate { get; set; }
        /// <summary>
        /// Date the product was discontinued.
        /// </summary>
        [Column(TypeName = "datetime")]
        [Display(Name = "Retirado")]
        public DateTime? DiscontinuedDate { get; set; }
        /// <summary>
        /// Small image of the product.
        /// </summary>
        public byte[] ThumbNailPhoto { get; set; }
        /// <summary>
        /// Small image file name.
        /// </summary>
        [StringLength(50)]
        public string ThumbnailPhotoFileName { get; set; }
        /// <summary>
        /// ROWGUIDCOL number uniquely identifying the record. Used to support a merge replication sample.
        /// </summary>
        [Column("rowguid")]
        public Guid Rowguid { get; set; }
        /// <summary>
        /// Date and time the record was last updated.
        /// </summary>
        [Column(TypeName = "datetime")]
        public DateTime ModifiedDate { get; set; }

        [ForeignKey(nameof(ProductCategoryId))]
        [InverseProperty("Products")]
        [Display(Name = "Categoría")]
        public virtual Category ProductCategory { get; set; }
        [ForeignKey(nameof(ProductModelId))]
        [InverseProperty("Products")]
        [Display(Name = "Modelo")]
        public virtual ProductModel ProductModel { get; set; }
        [InverseProperty(nameof(SalesOrderDetail.Product))]
        public virtual ICollection<SalesOrderDetail> SalesOrderDetails { get; set; }
    }
}